version: "2"
services:
    mongo:
        image: mongo
        command: [ "--replSet", "neconetic", "--bind_ip", "0.0.0.0"]
        environment:
            MONGO_INITDB_DATABASE: neconetic
            MONGO_REPLICA_SET_NAME: neconetic
        volumes:
            - ./data:/data/db
        ports:
            - 27017:27017

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://kafka:9092,OUTSIDE://0.0.0.0:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_REPLICA_FETCH_MAX_BYTES=50000000
      - KAFKA_PRODUCER_MAX_REQUEST_SIZE=50000000
      - KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - CONNECT_PRODUCER_MAX_REQUEST_SIZE=50000000
      - CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - KAFKA_MESSAGE_MAX_BYTES=50000000
      - KAFKA_CREATE_TOPICS="predicted:1:1,data:1:1"
    volumes:
      - kafka_data:/kafka
    depends_on:
      - zookeeper